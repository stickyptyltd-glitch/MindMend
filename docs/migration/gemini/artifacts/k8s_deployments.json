{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"cert-manager\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\",\"app.kubernetes.io/version\":\"v1.14.5\"},\"name\":\"cert-manager\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"9402\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"cert-manager\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\",\"app.kubernetes.io/version\":\"v1.14.5\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--cluster-resource-namespace=$(POD_NAMESPACE)\",\"--leader-election-namespace=kube-system\",\"--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.14.5\",\"--max-concurrent-challenges=60\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-controller:v1.14.5\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":8,\"httpGet\":{\"path\":\"/livez\",\"port\":\"http-healthz\",\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":15},\"name\":\"cert-manager-controller\",\"ports\":[{\"containerPort\":9402,\"name\":\"http-metrics\",\"protocol\":\"TCP\"},{\"containerPort\":9403,\"name\":\"http-healthz\",\"protocol\":\"TCP\"}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true}}],\"enableServiceLinks\":false,\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"cert-manager\"}}}}\n"
                },
                "creationTimestamp": "2025-09-22T07:58:40Z",
                "generation": 1,
                "labels": {
                    "app": "cert-manager",
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cert-manager",
                    "app.kubernetes.io/version": "v1.14.5"
                },
                "name": "cert-manager",
                "namespace": "cert-manager",
                "resourceVersion": "1758527929575807018",
                "uid": "9699b5e9-85c3-4688-b820-440be5d79f84"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "cert-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "9402",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cert-manager",
                            "app.kubernetes.io/component": "controller",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/name": "cert-manager",
                            "app.kubernetes.io/version": "v1.14.5"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--cluster-resource-namespace=$(POD_NAMESPACE)",
                                    "--leader-election-namespace=kube-system",
                                    "--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.14.5",
                                    "--max-concurrent-challenges=60"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-controller:v1.14.5",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 8,
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "http-healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 15
                                },
                                "name": "cert-manager-controller",
                                "ports": [
                                    {
                                        "containerPort": 9402,
                                        "name": "http-metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9403,
                                        "name": "http-healthz",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": false,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "cert-manager",
                        "serviceAccountName": "cert-manager",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-22T07:58:49Z",
                        "lastUpdateTime": "2025-09-22T07:58:49Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-22T07:58:41Z",
                        "lastUpdateTime": "2025-09-22T07:58:49Z",
                        "message": "ReplicaSet \"cert-manager-ff4b94468\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"cainjector\",\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\",\"app.kubernetes.io/version\":\"v1.14.5\"},\"name\":\"cert-manager-cainjector\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"cainjector\",\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\",\"app.kubernetes.io/version\":\"v1.14.5\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--leader-election-namespace=kube-system\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-cainjector:v1.14.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cert-manager-cainjector\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true}}],\"enableServiceLinks\":false,\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"cert-manager-cainjector\"}}}}\n"
                },
                "creationTimestamp": "2025-09-22T07:58:40Z",
                "generation": 1,
                "labels": {
                    "app": "cainjector",
                    "app.kubernetes.io/component": "cainjector",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cainjector",
                    "app.kubernetes.io/version": "v1.14.5"
                },
                "name": "cert-manager-cainjector",
                "namespace": "cert-manager",
                "resourceVersion": "1758527929479471012",
                "uid": "23440ebf-01bd-4a48-95e9-b1f54ce142b5"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "cainjector",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "cainjector"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cainjector",
                            "app.kubernetes.io/component": "cainjector",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/name": "cainjector",
                            "app.kubernetes.io/version": "v1.14.5"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--leader-election-namespace=kube-system"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-cainjector:v1.14.5",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cert-manager-cainjector",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": false,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "cert-manager-cainjector",
                        "serviceAccountName": "cert-manager-cainjector",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-22T07:58:49Z",
                        "lastUpdateTime": "2025-09-22T07:58:49Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-22T07:58:40Z",
                        "lastUpdateTime": "2025-09-22T07:58:49Z",
                        "message": "ReplicaSet \"cert-manager-cainjector-fd9bf654b\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"webhook\",\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\",\"app.kubernetes.io/version\":\"v1.14.5\"},\"name\":\"cert-manager-webhook\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"webhook\",\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\",\"app.kubernetes.io/version\":\"v1.14.5\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--secure-port=10250\",\"--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)\",\"--dynamic-serving-ca-secret-name=cert-manager-webhook-ca\",\"--dynamic-serving-dns-names=cert-manager-webhook\",\"--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)\",\"--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-webhook:v1.14.5\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":6080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"cert-manager-webhook\",\"ports\":[{\"containerPort\":10250,\"name\":\"https\",\"protocol\":\"TCP\"},{\"containerPort\":6080,\"name\":\"healthcheck\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":6080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true}}],\"enableServiceLinks\":false,\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"cert-manager-webhook\"}}}}\n"
                },
                "creationTimestamp": "2025-09-22T07:58:41Z",
                "generation": 1,
                "labels": {
                    "app": "webhook",
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "webhook",
                    "app.kubernetes.io/version": "v1.14.5"
                },
                "name": "cert-manager-webhook",
                "namespace": "cert-manager",
                "resourceVersion": "1758527936605359013",
                "uid": "68b821e4-22cc-4b39-b249-1c509b36d0e4"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "webhook",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "webhook"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "webhook",
                            "app.kubernetes.io/component": "webhook",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/name": "webhook",
                            "app.kubernetes.io/version": "v1.14.5"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--secure-port=10250",
                                    "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                                    "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                                    "--dynamic-serving-dns-names=cert-manager-webhook",
                                    "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)",
                                    "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-webhook:v1.14.5",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": 6080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "cert-manager-webhook",
                                "ports": [
                                    {
                                        "containerPort": 10250,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 6080,
                                        "name": "healthcheck",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 6080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": false,
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "cert-manager-webhook",
                        "serviceAccountName": "cert-manager-webhook",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-22T07:58:56Z",
                        "lastUpdateTime": "2025-09-22T07:58:56Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-22T07:58:41Z",
                        "lastUpdateTime": "2025-09-22T07:58:56Z",
                        "message": "ReplicaSet \"cert-manager-webhook-7749797f6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "11",
                    "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                    "kompose.version": "1.37.0 (fb0539e64)",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"celery-beat\"},\"name\":\"celery-beat\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"io.kompose.service\":\"celery-beat\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"celery-beat\"}},\"spec\":{\"containers\":[{\"command\":[\"/bin/sh\",\"-c\",\"cd /app \\u0026\\u0026 mkdir -p /app/tmp \\u0026\\u0026 celery -A celery_app beat --loglevel=info --schedule=/app/tmp/celerybeat-schedule --pidfile=/app/tmp/celerybeat.pid\"],\"env\":[{\"name\":\"PYTHONPATH\",\"value\":\"/app\"},{\"name\":\"CELERY_BROKER_URL\",\"value\":\"redis://redis:6379/0\"},{\"name\":\"CELERY_RESULT_BACKEND\",\"value\":\"redis://redis:6379/0\"}],\"envFrom\":[{\"secretRef\":{\"name\":\"mindmend-secrets\"}},{\"configMapRef\":{\"name\":\"mindmend-config\"}}],\"image\":\"gcr.io/mindmend-production/mindmend-app:celery-v3\",\"name\":\"mindmend-celery-beat\",\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"celery-beat-data\"}],\"workingDir\":\"/app\"}],\"restartPolicy\":\"Always\",\"volumes\":[{\"name\":\"celery-beat-data\",\"persistentVolumeClaim\":{\"claimName\":\"celery-beat-data\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-09-24T14:30:58Z",
                "generation": 15,
                "labels": {
                    "io.kompose.service": "celery-beat"
                },
                "name": "celery-beat",
                "namespace": "default",
                "resourceVersion": "1760104646642927013",
                "uid": "95dcbcbd-2767-4db2-afe1-b998f1deab2f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "io.kompose.service": "celery-beat"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                            "kompose.version": "1.37.0 (fb0539e64)",
                            "kubectl.kubernetes.io/restartedAt": "2025-09-28T07:03:01Z"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "io.kompose.service": "celery-beat"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/bin/sh",
                                    "-c",
                                    "cd /app \u0026\u0026 mkdir -p /app/tmp \u0026\u0026 celery -A celery_app beat --loglevel=info --schedule=/app/tmp/celerybeat-schedule --pidfile=/app/tmp/celerybeat.pid"
                                ],
                                "env": [
                                    {
                                        "name": "PYTHONPATH",
                                        "value": "/app"
                                    },
                                    {
                                        "name": "CELERY_BROKER_URL",
                                        "value": "redis://redis:6379/0"
                                    },
                                    {
                                        "name": "CELERY_RESULT_BACKEND",
                                        "value": "redis://redis:6379/0"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "mindmend-secrets"
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "mindmend-config"
                                        }
                                    }
                                ],
                                "image": "gcr.io/mindmend-production/mindmend-app:celery-v3",
                                "imagePullPolicy": "Always",
                                "name": "mindmend-celery-beat",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "celery-beat-data"
                                    }
                                ],
                                "workingDir": "/app"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "celery-beat-data",
                                "persistentVolumeClaim": {
                                    "claimName": "celery-beat-data"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-24T19:25:58Z",
                        "lastUpdateTime": "2025-10-10T13:57:02Z",
                        "message": "ReplicaSet \"celery-beat-5dfcf7c48b\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-10-10T13:57:26Z",
                        "lastUpdateTime": "2025-10-10T13:57:26Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 15,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "12",
                    "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                    "kompose.version": "1.37.0 (fb0539e64)",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"celery-worker\"},\"name\":\"celery-worker\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"io.kompose.service\":\"celery-worker\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"celery-worker\"}},\"spec\":{\"containers\":[{\"command\":[\"/bin/sh\",\"-c\",\"cd /app \\u0026\\u0026 celery -A celery_app worker --loglevel=info --concurrency=2 --max-tasks-per-child=100\"],\"env\":[{\"name\":\"PYTHONPATH\",\"value\":\"/app\"},{\"name\":\"CELERY_BROKER_URL\",\"value\":\"redis://redis:6379/0\"},{\"name\":\"CELERY_RESULT_BACKEND\",\"value\":\"redis://redis:6379/0\"}],\"envFrom\":[{\"secretRef\":{\"name\":\"mindmend-secrets\"}},{\"configMapRef\":{\"name\":\"mindmend-config\"}}],\"image\":\"gcr.io/mindmend-production/mindmend-app:celery-v3\",\"name\":\"mindmend-celery\",\"volumeMounts\":[{\"mountPath\":\"/var/www/mindmend/uploads\",\"name\":\"app-uploads\"}],\"workingDir\":\"/app\"}],\"restartPolicy\":\"Always\",\"volumes\":[{\"name\":\"app-uploads\",\"persistentVolumeClaim\":{\"claimName\":\"app-uploads\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-09-24T14:30:58Z",
                "generation": 17,
                "labels": {
                    "io.kompose.service": "celery-worker"
                },
                "name": "celery-worker",
                "namespace": "default",
                "resourceVersion": "1760104651698511005",
                "uid": "0e0e835b-0343-45f9-a7ac-9637529898ea"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "io.kompose.service": "celery-worker"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                            "kompose.version": "1.37.0 (fb0539e64)",
                            "kubectl.kubernetes.io/restartedAt": "2025-09-28T07:02:52Z"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "io.kompose.service": "celery-worker"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/bin/sh",
                                    "-c",
                                    "cd /app \u0026\u0026 celery -A celery_app worker --loglevel=info --concurrency=2 --max-tasks-per-child=100"
                                ],
                                "env": [
                                    {
                                        "name": "PYTHONPATH",
                                        "value": "/app"
                                    },
                                    {
                                        "name": "CELERY_BROKER_URL",
                                        "value": "redis://redis:6379/0"
                                    },
                                    {
                                        "name": "CELERY_RESULT_BACKEND",
                                        "value": "redis://redis:6379/0"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "mindmend-secrets"
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "mindmend-config"
                                        }
                                    }
                                ],
                                "image": "gcr.io/mindmend-production/mindmend-app:celery-v3",
                                "imagePullPolicy": "Always",
                                "name": "mindmend-celery",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/www/mindmend/uploads",
                                        "name": "app-uploads"
                                    }
                                ],
                                "workingDir": "/app"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "app-uploads",
                                "persistentVolumeClaim": {
                                    "claimName": "app-uploads"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-10T13:57:31Z",
                        "lastUpdateTime": "2025-10-10T13:57:31Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-09T00:10:19Z",
                        "lastUpdateTime": "2025-10-10T13:57:31Z",
                        "message": "ReplicaSet \"celery-worker-9c5ff48d5\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 17,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "36",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"mindmend-backend\"},\"name\":\"mindmend-backend\",\"namespace\":\"default\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"mindmend-backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"mindmend-backend\"}},\"spec\":{\"containers\":[{\"envFrom\":[{\"secretRef\":{\"name\":\"mindmend-secrets\"}}],\"image\":\"gcr.io/mindmend-production/mindmend-app:latest\",\"name\":\"mindmend-app\",\"ports\":[{\"containerPort\":8000}],\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"512Mi\"}}}]}}}}\n"
                },
                "creationTimestamp": "2025-09-24T22:03:13Z",
                "generation": 36,
                "labels": {
                    "app": "mindmend-backend"
                },
                "name": "mindmend-backend",
                "namespace": "default",
                "resourceVersion": "1760110403977647002",
                "uid": "f0eb7126-adaa-4745-a14b-c47e5ed868fd"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "mindmend-backend"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2025-10-10T05:43:17Z"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "mindmend-backend"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "mindmend-secrets"
                                        }
                                    }
                                ],
                                "image": "gcr.io/mindmend-production/mindmend-app:security-fix-v4",
                                "imagePullPolicy": "Always",
                                "name": "mindmend-app",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "800m",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "1Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 2,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-10T06:57:26Z",
                        "lastUpdateTime": "2025-10-10T06:57:26Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-24T22:03:13Z",
                        "lastUpdateTime": "2025-10-10T15:33:23Z",
                        "message": "ReplicaSet \"mindmend-backend-fd9586d88\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 36,
                "readyReplicas": 2,
                "replicas": 2,
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"nginx-deployment\",\"namespace\":\"default\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"nginx\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"nginx\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:latest\",\"name\":\"nginx\",\"ports\":[{\"containerPort\":80}],\"volumeMounts\":[{\"mountPath\":\"/etc/nginx/conf.d/default.conf\",\"name\":\"nginx-config-volume\",\"subPath\":\"nginx.conf\"}]}],\"volumes\":[{\"configMap\":{\"name\":\"nginx-config\"},\"name\":\"nginx-config-volume\"}]}}}}\n"
                },
                "creationTimestamp": "2025-09-24T22:03:13Z",
                "generation": 2,
                "name": "nginx-deployment",
                "namespace": "default",
                "resourceVersion": "1759973433803599024",
                "uid": "6bba8218-ba47-44ef-8d6d-a96c774cf117"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "nginx"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "nginx"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "nginx:latest",
                                "imagePullPolicy": "Always",
                                "name": "nginx",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/nginx/conf.d/default.conf",
                                        "name": "nginx-config-volume",
                                        "subPath": "nginx.conf"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "nginx-config"
                                },
                                "name": "nginx-config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 2,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-24T22:03:46Z",
                        "lastUpdateTime": "2025-09-24T22:03:46Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-24T22:03:13Z",
                        "lastUpdateTime": "2025-10-09T01:30:33Z",
                        "message": "ReplicaSet \"nginx-deployment-5dfbd6c4c9\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 2,
                "replicas": 2,
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                    "kompose.version": "1.37.0 (fb0539e64)",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"ollama\"},\"name\":\"ollama\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"io.kompose.service\":\"ollama\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"ollama\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"OLLAMA_HOST\",\"value\":\"0.0.0.0:11434\"}],\"image\":\"ollama/ollama:latest\",\"livenessProbe\":{\"exec\":{\"command\":[\"curl\",\"-f\",\"http://localhost:11434/api/tags\"]},\"failureThreshold\":5,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"mindmend-ollama\",\"ports\":[{\"containerPort\":11434,\"protocol\":\"TCP\"}],\"volumeMounts\":[{\"mountPath\":\"/root/.ollama\",\"name\":\"ollama-data\"}]}],\"restartPolicy\":\"Always\",\"volumes\":[{\"name\":\"ollama-data\",\"persistentVolumeClaim\":{\"claimName\":\"ollama-data\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-09-24T14:30:57Z",
                "generation": 3,
                "labels": {
                    "io.kompose.service": "ollama"
                },
                "name": "ollama",
                "namespace": "default",
                "resourceVersion": "1760100787534383006",
                "uid": "f75e0b7e-6b67-4f04-b1cd-dd3946c4603f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "io.kompose.service": "ollama"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                            "kompose.version": "1.37.0 (fb0539e64)",
                            "kubectl.kubernetes.io/restartedAt": "2025-10-10T12:51:21Z"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "io.kompose.service": "ollama"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "io.kompose.service",
                                                        "operator": "In",
                                                        "values": [
                                                            "postgres",
                                                            "redis",
                                                            "mindmend-backend"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "OLLAMA_HOST",
                                        "value": "0.0.0.0:11434"
                                    }
                                ],
                                "image": "ollama/ollama:latest",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "curl",
                                            "-f",
                                            "http://localhost:11434/api/tags"
                                        ]
                                    },
                                    "failureThreshold": 5,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "mindmend-ollama",
                                "ports": [
                                    {
                                        "containerPort": 11434,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/root/.ollama",
                                        "name": "ollama-data"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "ollama-data",
                                "persistentVolumeClaim": {
                                    "claimName": "ollama-data"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-10T12:53:07Z",
                        "lastUpdateTime": "2025-10-10T12:53:07Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-24T14:30:57Z",
                        "lastUpdateTime": "2025-10-10T12:53:07Z",
                        "message": "ReplicaSet \"ollama-5465ccb47f\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                    "kompose.version": "1.37.0 (fb0539e64)",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"postgres\"},\"name\":\"postgres\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"io.kompose.service\":\"postgres\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"postgres\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"POSTGRES_DB\",\"value\":\"mindmend_production\"},{\"name\":\"POSTGRES_INITDB_ARGS\",\"value\":\"--auth-host=scram-sha-256\"},{\"name\":\"POSTGRES_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"POSTGRES_PASSWORD\",\"name\":\"mindmend-secrets\"}}},{\"name\":\"POSTGRES_USER\",\"value\":\"mindmend_user\"},{\"name\":\"PGDATA\",\"value\":\"/var/lib/postgresql/data/pgdata\"}],\"image\":\"postgres:15-alpine\",\"livenessProbe\":{\"exec\":{\"command\":[\"pg_isready -U mindmend_user -d mindmend_production\"]},\"failureThreshold\":5,\"periodSeconds\":10,\"timeoutSeconds\":5},\"name\":\"mindmend-postgres\",\"ports\":[{\"containerPort\":5432,\"protocol\":\"TCP\"}],\"volumeMounts\":[{\"mountPath\":\"/var/lib/postgresql/data\",\"name\":\"postgres-data\"},{\"mountPath\":\"/etc/postgresql/postgresql.conf\",\"name\":\"postgres-cm1\",\"subPath\":\"postgresql.conf\"},{\"mountPath\":\"/docker-entrypoint-initdb.d/init-db.sql\",\"name\":\"postgres-cm2\",\"subPath\":\"init-db.sql\"}]}],\"restartPolicy\":\"Always\",\"volumes\":[{\"name\":\"postgres-data\",\"persistentVolumeClaim\":{\"claimName\":\"postgres-data\"}},{\"configMap\":{\"items\":[{\"key\":\"postgresql.conf\",\"path\":\"postgresql.conf\"}],\"name\":\"postgres-cm1\"},\"name\":\"postgres-cm1\"},{\"configMap\":{\"items\":[{\"key\":\"init-db.sql\",\"path\":\"init-db.sql\"}],\"name\":\"postgres-cm2\"},\"name\":\"postgres-cm2\"}]}}}}\n"
                },
                "creationTimestamp": "2025-09-24T14:34:54Z",
                "generation": 3,
                "labels": {
                    "io.kompose.service": "postgres"
                },
                "name": "postgres",
                "namespace": "default",
                "resourceVersion": "1760100694406351017",
                "uid": "c775b086-902c-4499-8d2f-f18d4135e886"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "io.kompose.service": "postgres"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                            "kompose.version": "1.37.0 (fb0539e64)",
                            "kubectl.kubernetes.io/restartedAt": "2025-10-10T12:51:21Z"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "io.kompose.service": "postgres"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "io.kompose.service",
                                                        "operator": "In",
                                                        "values": [
                                                            "redis",
                                                            "ollama",
                                                            "mindmend-backend"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POSTGRES_DB",
                                        "value": "mindmend_production"
                                    },
                                    {
                                        "name": "POSTGRES_INITDB_ARGS",
                                        "value": "--auth-host=scram-sha-256"
                                    },
                                    {
                                        "name": "POSTGRES_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "POSTGRES_PASSWORD",
                                                "name": "mindmend-secrets"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POSTGRES_USER",
                                        "value": "mindmend_user"
                                    },
                                    {
                                        "name": "PGDATA",
                                        "value": "/var/lib/postgresql/data/pgdata"
                                    }
                                ],
                                "image": "postgres:15-alpine",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "pg_isready -U mindmend_user -d mindmend_production"
                                        ]
                                    },
                                    "failureThreshold": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "mindmend-postgres",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/postgresql/data",
                                        "name": "postgres-data"
                                    },
                                    {
                                        "mountPath": "/etc/postgresql/postgresql.conf",
                                        "name": "postgres-cm1",
                                        "subPath": "postgresql.conf"
                                    },
                                    {
                                        "mountPath": "/docker-entrypoint-initdb.d/init-db.sql",
                                        "name": "postgres-cm2",
                                        "subPath": "init-db.sql"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "postgres-data",
                                "persistentVolumeClaim": {
                                    "claimName": "postgres-data"
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "postgresql.conf",
                                            "path": "postgresql.conf"
                                        }
                                    ],
                                    "name": "postgres-cm1"
                                },
                                "name": "postgres-cm1"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "init-db.sql",
                                            "path": "init-db.sql"
                                        }
                                    ],
                                    "name": "postgres-cm2"
                                },
                                "name": "postgres-cm2"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-10T12:51:34Z",
                        "lastUpdateTime": "2025-10-10T12:51:34Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-24T14:34:54Z",
                        "lastUpdateTime": "2025-10-10T12:51:34Z",
                        "message": "ReplicaSet \"postgres-75b54f6ff9\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                    "kompose.version": "1.37.0 (fb0539e64)",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"redis\"},\"name\":\"redis\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"io.kompose.service\":\"redis\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"kompose.cmd\":\"kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml\",\"kompose.version\":\"1.37.0 (fb0539e64)\"},\"labels\":{\"io.kompose.service\":\"redis\"}},\"spec\":{\"containers\":[{\"args\":[\"redis-server\",\"--appendonly\",\"yes\"],\"image\":\"redis:7-alpine\",\"livenessProbe\":{\"exec\":{\"command\":[\"redis-cli\",\"--raw\",\"incr\",\"ping\"]},\"failureThreshold\":5,\"periodSeconds\":10,\"timeoutSeconds\":5},\"name\":\"mindmend-redis\",\"ports\":[{\"containerPort\":6379,\"protocol\":\"TCP\"}],\"volumeMounts\":[{\"mountPath\":\"/data\",\"name\":\"redis-data\"}]}],\"restartPolicy\":\"Always\",\"volumes\":[{\"name\":\"redis-data\",\"persistentVolumeClaim\":{\"claimName\":\"redis-data\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-09-24T14:33:57Z",
                "generation": 3,
                "labels": {
                    "io.kompose.service": "redis"
                },
                "name": "redis",
                "namespace": "default",
                "resourceVersion": "1760100707121071005",
                "uid": "9468848f-9d6f-4f44-9f1b-2eab6c6799f1"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "io.kompose.service": "redis"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kompose.cmd": "kompose convert -f /home/mindmendxyz/MindMend/docker-compose.yml",
                            "kompose.version": "1.37.0 (fb0539e64)",
                            "kubectl.kubernetes.io/restartedAt": "2025-10-10T12:51:21Z"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "io.kompose.service": "redis"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "io.kompose.service",
                                                        "operator": "In",
                                                        "values": [
                                                            "postgres",
                                                            "ollama",
                                                            "mindmend-backend"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "redis-server",
                                    "--appendonly",
                                    "yes"
                                ],
                                "image": "redis:7-alpine",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "redis-cli",
                                            "--raw",
                                            "incr",
                                            "ping"
                                        ]
                                    },
                                    "failureThreshold": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "mindmend-redis",
                                "ports": [
                                    {
                                        "containerPort": 6379,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/data",
                                        "name": "redis-data"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "redis-data",
                                "persistentVolumeClaim": {
                                    "claimName": "redis-data"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-10T12:51:47Z",
                        "lastUpdateTime": "2025-10-10T12:51:47Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-24T14:33:57Z",
                        "lastUpdateTime": "2025-10-10T12:51:47Z",
                        "message": "ReplicaSet \"redis-b59d54fff\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "components.gke.io/layer": "addon",
                    "deployment.kubernetes.io/revision": "4"
                },
                "creationTimestamp": "2025-09-20T00:38:50Z",
                "generation": 4,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "managed-prometheus-operator",
                    "app.kubernetes.io/component": "operator",
                    "app.kubernetes.io/name": "gmp-operator",
                    "app.kubernetes.io/part-of": "gmp"
                },
                "name": "gmp-operator",
                "namespace": "gmp-system",
                "resourceVersion": "1759495131028223018",
                "uid": "61c86ecd-dc94-4217-ba0a-bb92e3a10c4a"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "operator",
                        "app.kubernetes.io/name": "gmp-operator",
                        "app.kubernetes.io/part-of": "gmp"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "components.gke.io/component-name": "managed-prometheus",
                            "components.gke.io/component-version": "0.15.4-gke.3"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "managed-prometheus-operator",
                            "app.kubernetes.io/component": "operator",
                            "app.kubernetes.io/name": "gmp-operator",
                            "app.kubernetes.io/part-of": "gmp",
                            "app.kubernetes.io/version": "0.15.4"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "arm64",
                                                        "amd64"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "--operator-namespace=gmp-system",
                                    "--public-namespace=gmp-public",
                                    "--webhook-addr=:10250",
                                    "--tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQW9lZ0F3SUJBZ0lSQU50bG15Q0RIZkt5cmVhZzNsK09OQlV3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa01UZzJOMkZtTURNdFkyUTBNQzAwT1dJM0xXSTFabVl0WVRKalkyUTVOVEJsWm1VMgpNQjRYRFRJMU1UQXdNekV5TWprd05Gb1hEVE13TVRBd01qRXlNekV3TkZvd05ERXlNREFHQTFVRUF4TXBaMjF3CkxXOXdaWEpoZEc5eUxtZHRjQzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2FIcjRTSnJnRHpFSExaK3FMYzVEQTdwYmFQMGpNMXZ5ZQo0UUJqVnZXVmgyL21HNjZyZW1NeTlJWWRLYWYxdDNFZEwzRS9lRjZiRmNvNDBaM0NPQ1hOM0hMZm5BckhhTE9tCktRVmtuZXhHNTNYSXIwbVpjcmpOZzZNZ0w4VjI0Yk1QeW43eldkRVdTekZmN1IyQVVTTjBpVHJiUWZKMW5yV0kKaDJFbXE2RWtwZFNhNC9DVDIwRjNwbXhEcENXOVdseTRuTlRpNmFMOGJlc1pKNEJudUhIRUxJRDVZOHE3R1JjawpKWmd3ZjJWbnBrems4c3hNSDlleWYrME1jMHlrS0NJS3crc04wT01QbWgzRHFZRHRCUUxSdDZQTzlZMEdmdlBICjJBUlpBcnhZRjlvT3F4N0NDaFZydElxdVVkMnNPcHkrVnBkeUhYWkVVQlM0RVpKTVNuTXZBZ01CQUFHamdiQXcKZ2Ewd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGTUgrcGc1WkRQOEF2Um96QXZRRDFKRWR2d2xrCk1FMEdBMVVkRVFSR01FU0NER2R0Y0MxdmNHVnlZWFJ2Y29JWFoyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjAKWlcyQ0cyZHRjQzF2Y0dWeVlYUnZjaTVuYlhBdGMzbHpkR1Z0TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBWUVBREpEckgvUHRpYkduM1p3enl5SWNxTXNBTGJrZU1iTzZQWUYyVkhFR1VEVnptczZocnE2cy9xOVFac2gvCmtOcWQxVlYvWUVFOVVrK21sdktGZUZSaFMxZFN5dUVlcURuaUFMU1hWbTVnZDJkOW8zR2FNT1lUTTdJeEp4NkwKeWtrOTFZTURqRlN5alRJVHlIaXExODNzYmV1SUozcDJVSHJBVkJVSldSZDhhdkM2TUxqR1RYUStKRGJMVmg5TAppeFZ2R1JLSHlBVWxwbzFNdUFQejNkdkk3Zmt2UHdNVDBQVnBkOUszd2hHYjNWTXZROUVkU2pBSnlJUTA3TGtPClhPNzdGL011Ym0relBIOFMxdkRsZzFjdE5IN2hWR3c2bEE1aXhyWEplMlRlUW1MSTNLTm51ejRpV2c0UlJ1aVUKOHRDOXpLV2sxRW9UTmVGS0QxTjRzV1gxOFhFTVJYUnYzTkc1K21JeEJzT0FqNW5ONWNwa0VOV290T2l1UjZ0OAprV1VYZG9wMHFRcTVKM1NFVUV2bFU2cSttbjMveWJVKzJtNGwzMUlRU3pOWlFiZG1oRnhYeSszc0ZnWkRsZ1pGCjMyTVc1MTBBcEoyNk45VXJRMHYyN1FFZHpvcWd1NWE3d3RyeXJoMlVUaGIzclNZNmRCY2NTUlVQVXZXZDNiTFYKWUx5UwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "--tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbWg2K0VpYTRBOHhCeTJmcWkzT1F3TzZXMmo5SXpOYjhudUVBWTFiMWxZZHY1aHV1CnEzcGpNdlNHSFNtbjliZHhIUzl4UDNoZW14WEtPTkdkd2pnbHpkeHkzNXdLeDJpenBpa0ZaSjNzUnVkMXlLOUoKbVhLNHpZT2pJQy9GZHVHekQ4cCs4MW5SRmtzeFgrMGRnRkVqZElrNjIwSHlkWjYxaUlkaEpxdWhKS1hVbXVQdwprOXRCZDZac1E2UWx2VnBjdUp6VTR1bWkvRzNyR1NlQVo3aHh4Q3lBK1dQS3V4a1hKQ1dZTUg5bFo2Wk01UExNClRCL1hzbi90REhOTXBDZ2lDc1ByRGREakQ1b2R3Nm1BN1FVQzBiZWp6dldOQm43eng5Z0VXUUs4V0JmYURxc2UKd2dvVmE3U0tybEhkckRxY3ZsYVhjaDEyUkZBVXVCR1NURXB6THdJREFRQUJBb0lCQURMRzNpaHN5VU8zRUJaTAo3bUp6ZU1XWDFldWgzZ0plOG13R0JYSzFPOFJBRXdYbEtPOG1LM2ltUjJsa1NBb1VuaGZYZ2FBL3NDdTRTaC9lCkwvUEZPKzlQS2lteDUzczdhN1RhM3dQL1k5RVlnUjNWWXBKRDBjOGtCNktiR3B2SVVJNXJVTmdzUjA3cEJ5TnIKbzhTYTl1dDJLd1lCL0RmMFNpcnBMNERtR3ZsUGhray9XT21oSmxnNzVyZ3ZzeitNQzdWNDlOcXN5L3E5dWp3eQo4aERwM2VDanhRYnFaVjhCWCtZRVRQbXhvOC9YZ0RRTDgxaHBPMFFKK2RuNFdXZWJadzh2TFFHMjUvRmxYaGRsCjhpc041SDBSQmpqSTZ6ZnExQzU3ZmZ6Q2psZGVvbXlrMWh6NXhyL21tRkcyUnFnMmR1TTZpVFFmR0RGRUR0U3QKLzFlZVVnRUNnWUVBMUIrR1hqSGxDWUl4RmRBeU5sZjljMVpvR3FVTFNmTy9QWkdmYWFzOVZlM05yYjdqY0h3WQpJRzRCdTNhT0FNM1h6c3k0dkRZazc1VXE3a0pKK3NPTTRFTXA2Um1qV3JnWGt0czdhWGNmZ2VWeEUzSkJJNUM3Cmw1OXhWMnZFeDJiQkRGbXJJSi9UakZPQmVoUkFWbWVlMkRzeXViVVdSdHYwNFJwcXhzeHVCYUVDZ1lFQXVmL04KMlRsWGNLbWxpS3hIWnRJcUNKSTlWTTNVeUsyQzVKMUpJUWQxNkFVRVhhMTNZc1FYMWVhUEFkWWhPaGNvc2I3cwplNWdQV2NiMDE2b3J2dlNRRkptM0U2NGgySzBZc2piU3RYZjdnNk4xMnVTS1FFa0VZT0tBSXh0VktJU3RTUkZrCmdEOE1lUXVGWkZuRzRJb3E2Q2ZncU94Q2dwWTJscUZqWjEyK0pzOENnWUVBeElkY3A0TFVzQVdXVXA1dEZ4cFkKc1BaNlIwMW9jeURJcTFOeS9hVHdrOTlhTTBKcldIa3dwVU1taWJlaWd5NHpadDhYdlJEeEVhUURmWEdmTnh6YwpOWjhrZ2xvRmxmUi9xc2xCZDBvdHY5eUM4a0JtQjN4OXdWR3c0Z3p2Nk1yVHl3eDgxeUlkRHFNRGo4YVpnVFJKCjRBNmd4WnY0UXJoaFhmbHF1anNIS0dFQ2dZRUFsQzNSM2RQTDhJcUd3UHFYSzdnVkdweisxWGZocERwdlJCaDIKTVNVVGJ0UElaYVVUcnBDUWVLMWtrczczeTZLMW5kMS80dnNDaDhCMFFQaG1QNHZ3MlNpWTdNbldWeHVYeUNyYQo5UTF3UjdCSzdTY1RhU0dDcG5qc0lvdmM3Um0rUDY3bWhURTFpNTE5R0xSWk4zdDdzVlpMcWVnSEdLZjVOMG05CnVwUzVMNHNDZ1lCdUpBZmFlajZRZ0Y1aWNMcG5kaUhMZFg4cEwvaHVQTFQvQXpCUS9NWmM4SE00YUw1a1hORGkKSXcrbStHZ3RGT1BiaEVzRjRmV1d4dTFRSzRZZENXRGlJMW1uUFVCREo1NUZtazByT2JjZG96eHp0UXdwdmVNaAo4QkYyeFpFY2FDbzZ3UWVpaXpwZDYxZmhNWEZ5aGpYdHgzZEpxNGg5VXlQbTJaQnFteHZ0dlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                                    "--project-id=mindmend-production",
                                    "--location=asia-southeast1-a",
                                    "--cluster=mindmend-cluster"
                                ],
                                "env": [
                                    {
                                        "name": "GCE_METADATA_HOST",
                                        "value": "169.254.169.254"
                                    }
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 18081,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "operator",
                                "ports": [
                                    {
                                        "containerPort": 10250,
                                        "name": "web",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 18080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 18081,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "2G"
                                    },
                                    "requests": {
                                        "cpu": "1m",
                                        "memory": "16M"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/tls/private",
                                        "name": "certs"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "gmp-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "operator",
                        "serviceAccountName": "operator",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "amd64"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "arm64"
                            },
                            {
                                "key": "components.gke.io/gke-managed-components",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "certs"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-21T01:32:08Z",
                        "lastUpdateTime": "2025-09-21T01:32:08Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-20T00:38:50Z",
                        "lastUpdateTime": "2025-10-03T12:38:51Z",
                        "message": "ReplicaSet \"gmp-operator-798456c64c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 4,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "components.gke.io/layer": "addon",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2025-09-20T00:38:50Z",
                "generation": 2,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile"
                },
                "name": "rule-evaluator",
                "namespace": "gmp-system",
                "resourceVersion": "1758328778744319001",
                "uid": "c0eb5989-2b32-46f1-ba77-966cf58e6c4f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 0,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "rule-evaluator"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "components.gke.io/component-name": "managed-prometheus",
                            "components.gke.io/component-version": "0.15.4-gke.3"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "managed-prometheus-rule-evaluator",
                            "app.kubernetes.io/name": "rule-evaluator",
                            "app.kubernetes.io/version": "0.15.4"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "arm64",
                                                        "amd64"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "--config-file=/prometheus/config/config.yaml",
                                    "--config-file-output=/prometheus/config_out/config.yaml",
                                    "--config-dir=/etc/rules",
                                    "--config-dir-output=/prometheus/rules_out",
                                    "--watched-dir=/etc/secrets",
                                    "--reload-url=http://127.0.0.1:19092/-/reload",
                                    "--ready-url=http://127.0.0.1:19092/-/ready",
                                    "--listen-address=:19093"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "config-reloader",
                                "ports": [
                                    {
                                        "containerPort": 19093,
                                        "name": "cfg-rel-metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "32M"
                                    },
                                    "requests": {
                                        "cpu": "1m",
                                        "memory": "4M"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/prometheus/config",
                                        "name": "config",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/prometheus/config_out",
                                        "name": "config-out"
                                    },
                                    {
                                        "mountPath": "/etc/rules",
                                        "name": "rules",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/prometheus/rules_out",
                                        "name": "rules-out"
                                    },
                                    {
                                        "mountPath": "/etc/secrets",
                                        "name": "rules-secret",
                                        "readOnly": true
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--config.file=/prometheus/config_out/config.yaml",
                                    "--web.listen-address=:19092",
                                    "--export.user-agent-mode=gke"
                                ],
                                "env": [
                                    {
                                        "name": "GCE_METADATA_HOST",
                                        "value": "169.254.169.254"
                                    }
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/rule-evaluator:v0.15.4-gke.0@sha256:3fd60d642225e3f431ff038583a1ef96c98fc48c425024466d9970f9086052fc",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/-/healthy",
                                        "port": 19092,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "evaluator",
                                "ports": [
                                    {
                                        "containerPort": 19092,
                                        "name": "r-eval-metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/-/ready",
                                        "port": 19092,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "1G"
                                    },
                                    "requests": {
                                        "cpu": "1m",
                                        "memory": "16M"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/prometheus/config_out",
                                        "name": "config-out",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/rules",
                                        "name": "rules-out",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/secrets",
                                        "name": "rules-secret",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "/bin/bash",
                                    "-c",
                                    "touch /prometheus/config_out/config.yaml"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "config-init",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/prometheus/config_out",
                                        "name": "config-out"
                                    }
                                ]
                            }
                        ],
                        "priorityClassName": "gmp-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "collector",
                        "serviceAccountName": "collector",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "amd64"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "arm64"
                            },
                            {
                                "key": "components.gke.io/gke-managed-components",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "rule-evaluator"
                                },
                                "name": "config"
                            },
                            {
                                "emptyDir": {},
                                "name": "config-out"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "rules-generated"
                                },
                                "name": "rules"
                            },
                            {
                                "emptyDir": {},
                                "name": "rules-out"
                            },
                            {
                                "name": "rules-secret",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "rules"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-20T00:39:38Z",
                        "lastUpdateTime": "2025-09-20T00:39:38Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-20T00:38:50Z",
                        "lastUpdateTime": "2025-09-20T00:39:38Z",
                        "message": "ReplicaSet \"rule-evaluator-768c49bb6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "4"
                },
                "creationTimestamp": "2025-09-20T00:38:14Z",
                "generation": 4,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "event-exporter",
                    "kubernetes.io/cluster-service": "true",
                    "version": "v0.4.0"
                },
                "name": "event-exporter-gke",
                "namespace": "kube-system",
                "resourceVersion": "1759495120959855018",
                "uid": "c4a3ada0-bc74-4c30-ac7e-db193f35165c"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "event-exporter"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "components.gke.io/component-name": "event-exporter",
                            "components.gke.io/component-version": "1.33.9-gke.0"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "event-exporter",
                            "version": "v0.4.0"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/event-exporter",
                                    "-sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com",
                                    "-prometheus-endpoint=:8080",
                                    "-enable-pod-owner-label=true",
                                    "-system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi"
                                ],
                                "env": [
                                    {
                                        "name": "GOOGLE_APPLICATION_CREDENTIALS",
                                        "value": "/var/run/token_broker/adc/google-application-credentials.json"
                                    }
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:event-exporter-v0.5.2-gke.6@sha256:76250369e72038ac25c521a7f5f980326f81245f8b7c2caac2c243429b44a81c",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "event-exporter",
                                "resources": {
                                    "requests": {
                                        "cpu": "3m",
                                        "memory": "100Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/token_broker/ksa",
                                        "name": "token-broker-ksa",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/token_broker/adc",
                                        "name": "token-broker-adc",
                                        "readOnly": true
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "/monitor",
                                    "--api-override=https://monitoring.googleapis.com/",
                                    "--source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons\u0026whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count",
                                    "--source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons\u0026customResourceType=k8s_container\u0026customLabels[project_id]\u0026customLabels[location]\u0026customLabels[cluster_name]\u0026customLabels[namespace_name]=kube-system\u0026customLabels[pod_name]=event-exporter-$NODE_NAME\u0026customLabels[container_name]=event-exporter\u0026whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count",
                                    "--pod-id=$(POD_NAME)",
                                    "--namespace-id=$(POD_NAMESPACE)",
                                    "--node-name=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "GOOGLE_APPLICATION_CREDENTIALS",
                                        "value": "/var/run/token_broker/adc/google-application-credentials.json"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "prometheus-to-sd-exporter",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/token_broker/ksa",
                                        "name": "token-broker-ksa",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/token_broker/adc",
                                        "name": "token-broker-adc",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "/node_token_broker_init",
                                    "--audience=https://container.googleapis.com/v1/projects/840448055519/locations/asia-southeast1-a/clusters/mindmend-cluster/generateClusterNodeAgentToken",
                                    "--token_url=https://container.googleapis.com/v1/projects/840448055519/locations/asia-southeast1-a/clusters/mindmend-cluster/generateClusterNodeAgentToken",
                                    "--token_file=/var/run/token_broker/ksa/token",
                                    "--output_path=/var/run/token_broker/adc/google-application-credentials.json",
                                    "--project_id=mindmend-production"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "token-broker-adc-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/token_broker/adc",
                                        "name": "token-broker-adc"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "event-exporter-sa",
                        "serviceAccountName": "event-exporter-sa",
                        "terminationGracePeriodSeconds": 120,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "arm64"
                            },
                            {
                                "key": "components.gke.io/gke-managed-components",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/etc/ssl/certs",
                                    "type": "Directory"
                                },
                                "name": "ssl-certs"
                            },
                            {
                                "name": "token-broker-ksa",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "https://container.googleapis.com/v1/projects/840448055519/locations/asia-southeast1-a/clusters/mindmend-cluster/generateClusterNodeAgentToken",
                                                "expirationSeconds": 3600,
                                                "path": "token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "token-broker-adc"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-21T01:35:41Z",
                        "lastUpdateTime": "2025-09-21T01:35:41Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-20T00:38:14Z",
                        "lastUpdateTime": "2025-10-03T12:38:40Z",
                        "message": "ReplicaSet \"event-exporter-gke-86dfbbcc56\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 4,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "components.gke.io/layer": "addon",
                    "credential-normal-mode": "true",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2025-09-20T00:38:35Z",
                "generation": 10,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "konnectivity-agent"
                },
                "name": "konnectivity-agent",
                "namespace": "kube-system",
                "resourceVersion": "1758751491237823024",
                "uid": "2f1aa834-7a0d-49ac-8370-dcc171deb6ce"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 3,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "konnectivity-agent"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                            "components.gke.io/component-version": "1.15.6"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "konnectivity-agent"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--logtostderr=true",
                                    "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                    "--proxy-server-host=10.45.240.2",
                                    "--proxy-server-port=8132",
                                    "--health-server-port=8093",
                                    "--admin-server-port=8094",
                                    "--sync-interval=5s",
                                    "--sync-interval-cap=30s",
                                    "--sync-forever=true",
                                    "--probe-interval=5s",
                                    "--keepalive-time=60s",
                                    "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
                                    "--enable-profiling",
                                    "--count-server-leases",
                                    "--server-count-source=max",
                                    "--v=3"
                                ],
                                "command": [
                                    "/proxy-agent"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8093,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 15
                                },
                                "name": "konnectivity-agent",
                                "resources": {
                                    "limits": {
                                        "memory": "125Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "30Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/tokens",
                                        "name": "konnectivity-agent-token"
                                    }
                                ]
                            },
                            {
                                "env": [
                                    {
                                        "name": "GOMAXPROCS",
                                        "value": "2"
                                    },
                                    {
                                        "name": "COLLECTOR_CONFIG_PATH",
                                        "value": "/conf/konnectivity-agent-metrics-collector-config-data.textproto"
                                    },
                                    {
                                        "name": "SPLIT_GAUGE_BUFFER",
                                        "value": "true"
                                    },
                                    {
                                        "name": "PROJECT_NUMBER",
                                        "value": "840448055519"
                                    },
                                    {
                                        "name": "LOCATION",
                                        "value": "asia-southeast1-a"
                                    },
                                    {
                                        "name": "CLUSTER_NAME",
                                        "value": "mindmend-cluster"
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_NAME",
                                        "value": "konnectivity-agent-metrics-collector"
                                    },
                                    {
                                        "name": "COMPONENT_VERSION",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations['components.gke.io/component-version']"
                                            }
                                        }
                                    },
                                    {
                                        "name": "COMPONENT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations['components.gke.io/component-name']"
                                            }
                                        }
                                    },
                                    {
                                        "name": "TOKEN_SOURCE_MODE",
                                        "value": "MODE_TOKEN_BROKER_WITH_FALLBACK"
                                    },
                                    {
                                        "name": "GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS",
                                        "value": "/var/run/token_broker/adc/google-application-credentials.json"
                                    },
                                    {
                                        "name": "GKE_HOSTNAME",
                                        "value": "container.googleapis.com"
                                    }
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "konnectivity-agent-metrics-collector",
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "30Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "30Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/conf",
                                        "name": "konnectivity-agent-metrics-collector-config-map-vol"
                                    },
                                    {
                                        "mountPath": "/var/run/token_broker/ksa",
                                        "name": "token-broker-ksa",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/token_broker/adc",
                                        "name": "token-broker-adc",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "/node_token_broker_init",
                                    "--audience=https://container.googleapis.com/v1/projects/840448055519/locations/asia-southeast1-a/clusters/mindmend-cluster/generateClusterNodeAgentToken",
                                    "--token_url=https://container.googleapis.com/v1/projects/840448055519/locations/asia-southeast1-a/clusters/mindmend-cluster/generateClusterNodeAgentToken",
                                    "--token_file=/var/run/token_broker/ksa/token",
                                    "--output_path=/var/run/token_broker/adc/google-application-credentials.json",
                                    "--project_id=mindmend-production"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "token-broker-adc-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/token_broker/adc",
                                        "name": "token-broker-adc"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1000,
                            "runAsGroup": 1000,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "konnectivity-agent",
                        "serviceAccountName": "konnectivity-agent",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "sandbox.gke.io/runtime",
                                "operator": "Equal",
                                "value": "gvisor"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "arm64"
                            },
                            {
                                "key": "components.gke.io/gke-managed-components",
                                "operator": "Exists"
                            }
                        ],
                        "topologySpreadConstraints": [
                            {
                                "labelSelector": {
                                    "matchLabels": {
                                        "k8s-app": "konnectivity-agent"
                                    }
                                },
                                "maxSkew": 1,
                                "topologyKey": "topology.kubernetes.io/zone",
                                "whenUnsatisfiable": "ScheduleAnyway"
                            },
                            {
                                "labelSelector": {
                                    "matchLabels": {
                                        "k8s-app": "konnectivity-agent"
                                    }
                                },
                                "maxSkew": 1,
                                "topologyKey": "kubernetes.io/hostname",
                                "whenUnsatisfiable": "ScheduleAnyway"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "konnectivity-agent-token",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "system:konnectivity-server",
                                                "expirationSeconds": 3600,
                                                "path": "konnectivity-agent-token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "konnectivity-agent-metrics-collector-config-data",
                                            "path": "konnectivity-agent-metrics-collector-config-data.textproto"
                                        }
                                    ],
                                    "name": "konnectivity-agent-metrics-collector-config-map"
                                },
                                "name": "konnectivity-agent-metrics-collector-config-map-vol"
                            },
                            {
                                "name": "token-broker-ksa",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "https://container.googleapis.com/v1/projects/840448055519/locations/asia-southeast1-a/clusters/mindmend-cluster/generateClusterNodeAgentToken",
                                                "expirationSeconds": 3600,
                                                "path": "token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "token-broker-adc"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 3,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-20T00:38:35Z",
                        "lastUpdateTime": "2025-09-20T00:40:00Z",
                        "message": "ReplicaSet \"konnectivity-agent-665b79b76\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-09-24T22:04:51Z",
                        "lastUpdateTime": "2025-09-24T22:04:51Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 10,
                "readyReplicas": 3,
                "replicas": 3,
                "updatedReplicas": 3
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "components.gke.io/layer": "addon",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2025-09-20T00:38:37Z",
                "generation": 1,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "konnectivity-agent-autoscaler",
                    "kubernetes.io/cluster-service": "true"
                },
                "name": "konnectivity-agent-autoscaler",
                "namespace": "kube-system",
                "resourceVersion": "1758418329136415004",
                "uid": "aaf38a64-3149-410b-ab4a-30d931bf4b5f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "konnectivity-agent-autoscaler"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "components.gke.io/component-name": "konnectivitynetworkproxy-combined",
                            "components.gke.io/component-version": "1.15.6"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "konnectivity-agent-autoscaler"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=konnectivity-agent-autoscaler-config",
                                    "--target=deployment/konnectivity-agent",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.16@sha256:7d88a8cf5fbcea4d244f584e1dfe2214fc4065d8bb97201c4816556dddab9ef8",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "autoscaler",
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "10M"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "konnectivity-agent-cpha",
                        "serviceAccountName": "konnectivity-agent-cpha",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "arm64"
                            },
                            {
                                "key": "components.gke.io/gke-managed-components",
                                "operator": "Exists"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-20T00:38:37Z",
                        "lastUpdateTime": "2025-09-20T00:39:36Z",
                        "message": "ReplicaSet \"konnectivity-agent-autoscaler-75bd5f4d59\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-09-21T01:32:09Z",
                        "lastUpdateTime": "2025-09-21T01:32:09Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2"
                },
                "creationTimestamp": "2025-09-20T00:37:55Z",
                "generation": 3,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true"
                },
                "name": "kube-dns",
                "namespace": "kube-system",
                "resourceVersion": "1758889526454415022",
                "uid": "1d817918-6174-493d-900b-e4df83f90826"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "10%",
                        "maxUnavailable": 0
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "components.gke.io/component-name": "kubedns",
                            "components.gke.io/component-version": "33.2.6",
                            "prometheus.io/port": "10054",
                            "prometheus.io/scrape": "true",
                            "scheduler.alpha.kubernetes.io/critical-pod": ""
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "--domain=cluster.local.",
                                    "--dns-port=10053",
                                    "--config-dir=/kube-dns-config",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "PROMETHEUS_PORT",
                                        "value": "10055"
                                    }
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.26.4-gke.7@sha256:1d2d3f962be36b000d5d429fe950f2b8a43c1501a64b7fae387ec1422878a235",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/healthcheck/kubedns",
                                        "port": 10054,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "kubedns",
                                "ports": [
                                    {
                                        "containerPort": 10053,
                                        "name": "dns-local",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 10053,
                                        "name": "dns-tcp-local",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readiness",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "210Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 1001,
                                    "runAsUser": 1001
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/kube-dns-config",
                                        "name": "kube-dns-config"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "-v=2",
                                    "-logtostderr",
                                    "-configDir=/etc/k8s/dns/dnsmasq-nanny",
                                    "-restartDnsmasq=true",
                                    "--",
                                    "-k",
                                    "--cache-size=1000",
                                    "--no-negcache",
                                    "--dns-forward-max=1500",
                                    "--log-facility=-",
                                    "--server=/cluster.local/127.0.0.1#10053",
                                    "--server=/in-addr.arpa/127.0.0.1#10053",
                                    "--server=/ip6.arpa/127.0.0.1#10053",
                                    "--max-ttl=30",
                                    "--max-cache-ttl=30",
                                    "--max-tcp-connections=200"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.26.4-gke.7@sha256:392e7c5ea5ce1d0eb2c296ba112e6d1edefc8dfbc25a89a02429a3e8e82826ce",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/healthcheck/dnsmasq",
                                        "port": 10054,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "dnsmasq",
                                "ports": [
                                    {
                                        "containerPort": 53,
                                        "name": "dns",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 53,
                                        "name": "dns-tcp",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "150m",
                                        "memory": "20Mi"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE",
                                            "SETGID"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/k8s/dns/dnsmasq-nanny",
                                        "name": "kube-dns-config"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--v=2",
                                    "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                    "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.26.4-gke.7@sha256:1b3d3b744fc69cd2bfee58946056f80522142b9d7ed8236409e0e2a409492d1c",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": 10054,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "sidecar",
                                "ports": [
                                    {
                                        "containerPort": 10054,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 1001,
                                    "runAsUser": 1001
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "env": [
                                    {
                                        "name": "GOMAXPROCS",
                                        "value": "2"
                                    },
                                    {
                                        "name": "COLLECTOR_CONFIG_PATH",
                                        "value": "/conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto"
                                    },
                                    {
                                        "name": "SPLIT_GAUGE_BUFFER",
                                        "value": "true"
                                    },
                                    {
                                        "name": "PROJECT_NUMBER",
                                        "value": "840448055519"
                                    },
                                    {
                                        "name": "LOCATION",
                                        "value": "asia-southeast1-a"
                                    },
                                    {
                                        "name": "CLUSTER_NAME",
                                        "value": "mindmend-cluster"
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_NAME",
                                        "value": "kubedns-metrics-collector"
                                    },
                                    {
                                        "name": "COMPONENT_VERSION",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations['components.gke.io/component-version']"
                                            }
                                        }
                                    },
                                    {
                                        "name": "COMPONENT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations['components.gke.io/component-name']"
                                            }
                                        }
                                    },
                                    {
                                        "name": "TOKEN_SOURCE_MODE",
                                        "value": "MODE_TOKEN_BROKER_WITH_FALLBACK"
                                    },
                                    {
                                        "name": "GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS",
                                        "value": "/var/run/token_broker/adc/google-application-credentials.json"
                                    },
                                    {
                                        "name": "GKE_HOSTNAME",
                                        "value": "container.googleapis.com"
                                    }
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250821_2300_RC0@sha256:44b242f7acad93034bf7c5d67009b5feec1eafcc53840546225b00cb03a53d37",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kubedns-metrics-collector",
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "45Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "45Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 1001,
                                    "runAsUser": 1001
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/conf",
                                        "name": "kubedns-metrics-collector-config-map-vol"
                                    },
                                    {
                                        "mountPath": "/var/run/token_broker/ksa",
                                        "name": "token-broker-ksa",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/token_broker/adc",
                                        "name": "token-broker-adc",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "Default",
                        "initContainers": [
                            {
                                "command": [
                                    "/node_token_broker_init",
                                    "--audience=https://container.googleapis.com/v1/projects/840448055519/locations/asia-southeast1-a/clusters/mindmend-cluster/generateClusterNodeAgentToken",
                                    "--token_url=https://container.googleapis.com/v1/projects/840448055519/locations/asia-southeast1-a/clusters/mindmend-cluster/generateClusterNodeAgentToken",
                                    "--token_file=/var/run/token_broker/ksa/token",
                                    "--output_path=/var/run/token_broker/adc/google-application-credentials.json",
                                    "--project_id=mindmend-production"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "token-broker-adc-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/token_broker/adc",
                                        "name": "token-broker-adc"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 65534,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            },
                            "supplementalGroups": [
                                65534
                            ]
                        },
                        "serviceAccount": "kube-dns",
                        "serviceAccountName": "kube-dns",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "components.gke.io/gke-managed-components",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "arm64"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-dns",
                                    "optional": true
                                },
                                "name": "kube-dns-config"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kubedns-metrics-collector-config-data",
                                            "path": "kubedns-metrics-collector-config-data.textproto"
                                        },
                                        {
                                            "key": "sidecar-metrics-collector-config-data",
                                            "path": "sidecar-metrics-collector-config-data.textproto"
                                        }
                                    ],
                                    "name": "kubedns-metrics-collector-config-map"
                                },
                                "name": "kubedns-metrics-collector-config-map-vol"
                            },
                            {
                                "name": "token-broker-ksa",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "https://container.googleapis.com/v1/projects/840448055519/locations/asia-southeast1-a/clusters/mindmend-cluster/generateClusterNodeAgentToken",
                                                "expirationSeconds": 3600,
                                                "path": "token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "token-broker-adc"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 2,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-21T01:35:49Z",
                        "lastUpdateTime": "2025-09-21T01:35:49Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-20T00:37:55Z",
                        "lastUpdateTime": "2025-09-26T12:25:26Z",
                        "message": "ReplicaSet \"kube-dns-756476dcdc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 2,
                "replicas": 2,
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2"
                },
                "creationTimestamp": "2025-09-20T00:38:39Z",
                "generation": 2,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns-autoscaler",
                    "kubernetes.io/cluster-service": "true"
                },
                "name": "kube-dns-autoscaler",
                "namespace": "kube-system",
                "resourceVersion": "1758889494168735023",
                "uid": "5d18c95b-9ad1-4d48-9371-23b6f0814aa1"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns-autoscaler"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "components.gke.io/component-name": "kubedns",
                            "components.gke.io/component-version": "33.2.6"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns-autoscaler"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=kube-dns-autoscaler",
                                    "--target=Deployment/kube-dns",
                                    "--default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true,\"includeUnschedulableNodes\":true}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.13@sha256:5d8547afe9975d9a090a9566e4bf07430f15092f8d803414ae0323d331940624",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "autoscaler",
                                "resources": {
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 65534,
                            "runAsGroup": 1000,
                            "runAsUser": 1000,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            },
                            "supplementalGroups": [
                                65534
                            ]
                        },
                        "serviceAccount": "kube-dns-autoscaler",
                        "serviceAccountName": "kube-dns-autoscaler",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "components.gke.io/gke-managed-components",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "arm64"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-21T01:32:10Z",
                        "lastUpdateTime": "2025-09-21T01:32:10Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-20T00:38:39Z",
                        "lastUpdateTime": "2025-09-26T12:24:54Z",
                        "message": "ReplicaSet \"kube-dns-autoscaler-864c55cc6f\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "components.gke.io/layer": "addon",
                    "deployment.kubernetes.io/revision": "2"
                },
                "creationTimestamp": "2025-09-20T00:38:42Z",
                "generation": 2,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "glbc",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "GLBC"
                },
                "name": "l7-default-backend",
                "namespace": "kube-system",
                "resourceVersion": "1759495126971087021",
                "uid": "fa63c17e-a5f3-4f3a-bb15-9ba06b75d62c"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "glbc"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "components.gke.io/component-name": "l7-lb-controller-combined",
                            "components.gke.io/component-version": "1.36.4-gke.0"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "glbc",
                            "name": "glbc"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": false,
                        "containers": [
                            {
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.36.2@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "default-http-backend",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 1000,
                                    "runAsUser": 1000
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "arm64"
                            },
                            {
                                "key": "components.gke.io/gke-managed-components",
                                "operator": "Exists"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-21T01:32:10Z",
                        "lastUpdateTime": "2025-09-21T01:32:10Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-09-20T00:38:42Z",
                        "lastUpdateTime": "2025-10-03T12:38:46Z",
                        "message": "ReplicaSet \"l7-default-backend-6bdb575956\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "components.gke.io/layer": "addon",
                    "deployment.kubernetes.io/revision": "2"
                },
                "creationTimestamp": "2025-09-20T00:38:56Z",
                "generation": 2,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "metrics-server",
                    "version": "v1.33.0"
                },
                "name": "metrics-server-v1.33.0",
                "namespace": "kube-system",
                "resourceVersion": "1758418399717471002",
                "uid": "6fa17635-4b77-4a0b-8272-d92478a6fa1a"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "version": "v1.33.0"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "components.gke.io/component-name": "metrics-server",
                            "components.gke.io/component-version": "1.33.0-gke.3"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "version": "v1.33.0"
                        },
                        "name": "metrics-server"
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/metrics-server",
                                    "--metric-resolution=30s",
                                    "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP",
                                    "--cert-dir=/tmp",
                                    "--secure-port=10250",
                                    "--kubelet-allow-working-set-bytes-zero=false"
                                ],
                                "image": "asia-southeast1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.45@sha256:6d492cdefe6ca4b4582f37318b70fb2098cb35058f04128fb9f5a4cf9bd73243",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 50,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "metrics-server",
                                "ports": [
                                    {
                                        "containerPort": 10250,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 50,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "43m",
                                        "memory": "55Mi"
                                    },
                                    "requests": {
                                        "cpu": "43m",
                                        "memory": "55Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 1000,
                                    "runAsUser": 1000,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "metrics-server",
                        "serviceAccountName": "metrics-server",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "components.gke.io/gke-managed-components",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "kubernetes.io/arch",
                                "operator": "Equal",
                                "value": "arm64"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "metrics-server-config"
                                },
                                "name": "metrics-server-config-volume"
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-09-20T00:38:56Z",
                        "lastUpdateTime": "2025-09-20T00:40:45Z",
                        "message": "ReplicaSet \"metrics-server-v1.33.0-79f95cb4df\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-09-21T01:33:19Z",
                        "lastUpdateTime": "2025-09-21T01:33:19Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"mindmend-backend\",\"namespace\":\"mindmend\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"mindmend-backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"mindmend-backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"FLASK_ENV\",\"value\":\"production\"}],\"envFrom\":[{\"secretRef\":{\"name\":\"mindmend-secrets-gsm\"}}],\"image\":\"australia-southeast1-docker.pkg.dev/mindmend-production/mindmend/mindmend-app:latest\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"mindmend-app\",\"ports\":[{\"containerPort\":8000}],\"volumeMounts\":[{\"mountPath\":\"/var/www/mindmend/uploads\",\"name\":\"uploads\"},{\"mountPath\":\"/var/run/secrets/mindmend/gsm\",\"name\":\"gsm-secrets\",\"readOnly\":true}]}],\"volumes\":[{\"name\":\"uploads\",\"persistentVolumeClaim\":{\"claimName\":\"app-uploads\"}},{\"csi\":{\"driver\":\"secrets-store.csi.k8s.io\",\"readOnly\":true,\"volumeAttributes\":{\"secretProviderClass\":\"mindmend-gsm\"}},\"name\":\"gsm-secrets\"}]}}}}\n"
                },
                "creationTimestamp": "2025-10-09T11:18:21Z",
                "generation": 1,
                "name": "mindmend-backend",
                "namespace": "mindmend",
                "resourceVersion": "1760009302023711024",
                "uid": "87e2cdc8-ad3e-4690-b009-5b71781d8ec9"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "mindmend-backend"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "mindmend-backend"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "FLASK_ENV",
                                        "value": "production"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "mindmend-secrets-gsm"
                                        }
                                    }
                                ],
                                "image": "australia-southeast1-docker.pkg.dev/mindmend-production/mindmend/mindmend-app:latest",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "mindmend-app",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/www/mindmend/uploads",
                                        "name": "uploads"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/mindmend/gsm",
                                        "name": "gsm-secrets",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "uploads",
                                "persistentVolumeClaim": {
                                    "claimName": "app-uploads"
                                }
                            },
                            {
                                "csi": {
                                    "driver": "secrets-store.csi.k8s.io",
                                    "readOnly": true,
                                    "volumeAttributes": {
                                        "secretProviderClass": "mindmend-gsm"
                                    }
                                },
                                "name": "gsm-secrets"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-09T11:18:21Z",
                        "lastUpdateTime": "2025-10-09T11:18:21Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-09T11:28:22Z",
                        "lastUpdateTime": "2025-10-09T11:28:22Z",
                        "message": "ReplicaSet \"mindmend-backend-785f5577df\" has timed out progressing.",
                        "reason": "ProgressDeadlineExceeded",
                        "status": "False",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "replicas": 2,
                "unavailableReplicas": 2,
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"postgres\",\"namespace\":\"mindmend\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"postgres\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"postgres\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"POSTGRES_DB\",\"value\":\"mindmend_production\"},{\"name\":\"POSTGRES_USER\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"POSTGRES_USER\",\"name\":\"mindmend-secrets\"}}},{\"name\":\"POSTGRES_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"POSTGRES_PASSWORD\",\"name\":\"mindmend-secrets\"}}}],\"image\":\"postgres:15-alpine\",\"name\":\"mindmend-postgres\",\"ports\":[{\"containerPort\":5432}],\"volumeMounts\":[{\"mountPath\":\"/var/lib/postgresql/data\",\"name\":\"pgdata\"}]}],\"volumes\":[{\"name\":\"pgdata\",\"persistentVolumeClaim\":{\"claimName\":\"postgres-data\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-09T11:15:45Z",
                "generation": 3,
                "name": "postgres",
                "namespace": "mindmend",
                "resourceVersion": "1760008877307007023",
                "uid": "83cab24b-9fe2-4823-a7fd-4b0baa1bd75c"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "postgres"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "postgres"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POSTGRES_DB",
                                        "value": "mindmend_production"
                                    },
                                    {
                                        "name": "POSTGRES_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "POSTGRES_USER",
                                                "name": "mindmend-secrets"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POSTGRES_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "POSTGRES_PASSWORD",
                                                "name": "mindmend-secrets"
                                            }
                                        }
                                    }
                                ],
                                "image": "postgres:15-alpine",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "mindmend-postgres",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/postgresql/data",
                                        "name": "pgdata"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "pgdata",
                                "persistentVolumeClaim": {
                                    "claimName": "postgres-data"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-09T11:15:45Z",
                        "lastUpdateTime": "2025-10-09T11:16:10Z",
                        "message": "ReplicaSet \"postgres-596c86cbc9\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2025-10-09T11:21:17Z",
                        "lastUpdateTime": "2025-10-09T11:21:17Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"redis\",\"namespace\":\"mindmend\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\"}},\"spec\":{\"containers\":[{\"image\":\"redis:7-alpine\",\"name\":\"mindmend-redis\",\"ports\":[{\"containerPort\":6379}],\"volumeMounts\":[{\"mountPath\":\"/data\",\"name\":\"redisdata\"}]}],\"volumes\":[{\"name\":\"redisdata\",\"persistentVolumeClaim\":{\"claimName\":\"redis-data\"}}]}}}}\n"
                },
                "creationTimestamp": "2025-10-09T11:15:46Z",
                "generation": 1,
                "name": "redis",
                "namespace": "mindmend",
                "resourceVersion": "1760008565938143004",
                "uid": "1e24f427-5701-4308-bf5f-27dfb7009591"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "redis"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "redis"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "redis:7-alpine",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "mindmend-redis",
                                "ports": [
                                    {
                                        "containerPort": 6379,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/data",
                                        "name": "redisdata"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "redisdata",
                                "persistentVolumeClaim": {
                                    "claimName": "redis-data"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2025-10-09T11:16:05Z",
                        "lastUpdateTime": "2025-10-09T11:16:05Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2025-10-09T11:15:46Z",
                        "lastUpdateTime": "2025-10-09T11:16:05Z",
                        "message": "ReplicaSet \"redis-7959b86fdd\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": ""
    }
}

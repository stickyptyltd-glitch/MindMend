name: CI/CD

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: mindmend-production
      AR_LOCATION: australia-southeast1
      AR_REPO: mindmend
      IMAGE_NAME: mindmend-app
      CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
      CLUSTER_LOCATION: ${{ secrets.GKE_CLUSTER_LOCATION }}
      K8S_NAMESPACE: mindmend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to GCP (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker auth for Artifact Registry
        run: |
          gcloud auth configure-docker ${AR_LOCATION}-docker.pkg.dev --quiet

      - name: Build and push image
        working-directory: MindMend
        run: |
          IMAGE_URI=${AR_LOCATION}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker build -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials "$CLUSTER_NAME" --location "$CLUSTER_LOCATION" --project "$PROJECT_ID"

      - name: Create namespace (idempotent)
        run: |
          kubectl apply -f MindMend/k8s/namespace.yaml

      - name: Apply storage and cert manager resources
        run: |
          kubectl apply -f MindMend/k8s/storage.yaml
          kubectl apply -f MindMend/k8s/cert-manager.yaml

      - name: Apply core services
        run: |
          kubectl apply -f MindMend/k8s/redis.yaml
          kubectl apply -f MindMend/k8s/postgres.yaml
          kubectl apply -f MindMend/k8s/service-app.yaml
          kubectl apply -f MindMend/k8s/deployment-app.yaml

      - name: Update image
        run: |
          kubectl -n "$K8S_NAMESPACE" set image deployment/mindmend-backend mindmend-app="$IMAGE_URI"

      - name: Apply ingress
        run: |
          kubectl apply -f MindMend/k8s/ingress.yaml

  deploy-vm:
    needs: build-and-deploy
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to VM via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_KEY }}
          port: ${{ secrets.VM_PORT || 22 }}
          script: |
            set -euo pipefail
            cd ${{ secrets.VM_DIR }}
            git fetch origin main
            git reset --hard origin/main
            if [ -f docker-compose.yml ] || [ -f compose.yaml ] || [ -f compose.yml ]; then
              docker compose pull || docker-compose pull || true
              docker compose up -d || docker-compose up -d || true
              docker system prune -f || true
            else
              echo "No compose file found; restarting systemd service if present"
              sudo systemctl daemon-reload || true
              sudo systemctl restart mindmend || true
            fi
